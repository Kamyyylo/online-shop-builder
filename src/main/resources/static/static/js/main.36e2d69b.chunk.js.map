{"version":3,"sources":["actions/types.js","actions/categoryActions.js","actions/productlistActions.js","components/Category/CategoryItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityAcions.js","components/Layout/Header.js","actions/shopMainDataActions.js","components/Category/AddCategory.js","reducers/errorReducer.js","reducers/categoryReducer.js","reducers/productlistReducer.js","reducers/shoppingCartReducer.js","reducers/shopMainDataReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Category/UpdateCategory.js","actions/shoppingCartActions.js","components/ProductsBoard/Products/Product.js","components/ProductsBoard/ProductsBoard.js","components/ProductsBoard/Products/AddProduct.js","components/ProductsBoard/Products/UpdateProduct.js","components/ProductsBoard/Products/MoreInfoProduct.js","components/ShoppingCart/CartProduct.js","components/ShoppingCart/CartProductList.js","components/InfoImage.js","components/Layout/Footer.js","components/ChangeMainData/ChangeMainData.js","components/Layout/EnterPage.js","components/User/Login.js","components/User/Register.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createCategory","category","history","dispatch","a","axios","post","push","type","payload","response","data","getCategory","id","get","res","getProductList","productlist_id","getProduct","pl_id","CategoryItem","onDeleteClick","props","deleteCategory","onUpdateClick","onCategoryNameClick","adminButtons","this","user","security","userIsAdmin","Fragment","className","onClick","bind","categoryIdentifier","to","userIsNotAdmin","admin","categoryName","Component","connect","state","window","confirm","delete","Dashboard","getCategories","categories","data-feather","map","key","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","parent","location","href","getShopMainData","adminButton","validToken","address","headerLoggedData","userIsLogged","username","shopMainData","shopName","AddCategory","description","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newCategory","classnames","placeholder","initialState","products","product","shoppingCart","booleanActionPayload","combineReducers","action","filter","productlist","categorySequence","cartItem","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateCategory","match","params","updateCategory","disabled","addToShoppingCart","emptyjson","Product","deleteProduct","src","productPhoto","alt","productName","productPrice","Popup","content","position","trigger","onAddToCartClick","productShortDescription","ProductsBoard","BoardContent","productList","productItem","categoryNotFound","role","boardAlgorithm","AddProduct","productDescription","newProduct","addProduct","UpdateProduct","updatedProduct","updateProduct","patch","MoreInfoProduct","CartProduct","deleteProductFromCart","item","productPhotoInCart","productNameInCart","productPriceInCart","onDeleteIconClick","CartProductList","shipping","isDisabled","getShoppingCart","costOfProducts","shoppingCartItem","isCheckoutButtonWorking","checkoutEnabled","currency","stripeKey","addresses","console","log","billingAddress","shippingAddress","amount","checkoutDisabled","CartItems","onShippingButtonClick","InfoImage","pictureOnTheDashboard","Footer","contactEmail","ChangeMainData","updateShopMainData","alert","EnterPage","Login","password","loginRequest","login","LoginRequest","setItem","decoded","jwt_decode","Register","fullName","confirmPassword","newUser","createNewUser","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36e2d69b.chunk.js","sourcesContent":["//Errors\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\n//Categories types\r\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\r\nexport const GET_CATEGORY = \"GET_CATEGORY\";\r\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\r\n//ProductList and product types\r\nexport const GET_PRODUCTLIST = \"GET_PRODUCTLIST\";\r\nexport const GET_PRODUCT = \"GET_PRODUCT\";\r\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\r\n//Shopping Cart types\r\nexport const GET_SHOPPING_CART = \"GET_SHOPPING_CART\";\r\n//Shipping Options types\r\nexport const GET_SHIPPING_OPTIONS = \"GET_SHIPPING_OPTIONS\";\r\nexport const DELETE_PRODUCT_FROM_CART = \"DELETE_PRODUCT_FROM_CART\";\r\n//Shop Main Data types\r\nexport const GET_SHOP_MAIN_DATA = \"GET_SHOP_MAIN_DATA\";\r\n//User types\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_CATEGORIES,\r\n  GET_CATEGORY,\r\n  DELETE_CATEGORY\r\n} from \"../actions/types\";\r\n\r\n//history pushes as to dashboard if we add category\r\nexport const createCategory = (category, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/category\", category);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCategories = () => async dispatch => {\r\n  const res = await axios.get(\"/category/all\");\r\n  dispatch({\r\n    type: GET_CATEGORIES,\r\n    //this payload is being load to the reducer\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getCategory = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/category/${id}`);\r\n    dispatch({\r\n      type: GET_CATEGORY,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteCategory = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure you want to delete the whole category and all products that belongs to it ?\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/category/${id}`);\r\n    dispatch({\r\n      type: DELETE_CATEGORY,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_PRODUCTLIST,\r\n  GET_PRODUCT,\r\n  DELETE_PRODUCT\r\n} from \"../actions/types\";\r\n\r\nexport const addProduct = (\r\n  productlist_id,\r\n  product,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/productlist/${productlist_id}`, product);\r\n    history.push(`/productsBoard/${productlist_id}`);\r\n    //if everything is ok we can clean the errors\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductList = productlist_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/productlist/${productlist_id}`);\r\n    dispatch({\r\n      type: GET_PRODUCTLIST,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProduct = (\r\n  productlist_id,\r\n  pl_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/productlist/${productlist_id}/${pl_id}`);\r\n    dispatch({\r\n      type: GET_PRODUCT,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    //validation to prevent putting wrong ids\r\n    //should call to dashboard\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProduct = (\r\n  productlist_id,\r\n  pl_id,\r\n  updatedProduct,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(\r\n      `/productlist/${productlist_id}/${pl_id}`,\r\n      updatedProduct\r\n    );\r\n    history.push(`/productsBoard/${productlist_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (productlist_id, pl_id) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `Are you sure you want to delete this product? This action cannot be undone`\r\n    )\r\n  )\r\n    await axios.delete(`/productlist/${productlist_id}/${pl_id}`);\r\n  dispatch({\r\n    type: DELETE_PRODUCT,\r\n    //im going to use this id in the future\r\n    payload: pl_id\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteCategory, getCategory } from \"../../actions/categoryActions\";\r\nimport { getProductList } from \"../../actions/productlistActions\";\r\n\r\nclass CategoryItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteCategory(id);\r\n  };\r\n  onUpdateClick = (id, history) => {\r\n    this.props.getCategory(id, history);\r\n  };\r\n  onCategoryNameClick = id => {\r\n    this.props.getProductList(id);\r\n  };\r\n\r\n  render() {\r\n    const { category } = this.props;\r\n\r\n    const { user } = this.props.security;\r\n    const userIsAdmin = (\r\n      <React.Fragment>\r\n        <button\r\n          className=\"btn btn-danger float-right float-right button-category\"\r\n          onClick={this.onDeleteClick.bind(this, category.categoryIdentifier)}\r\n        >\r\n          <i className=\"fa fa-trash\"></i>\r\n        </button>\r\n        <Link\r\n          onClick={this.onUpdateClick.bind(\r\n            this,\r\n            category.categoryIdentifier,\r\n            this.props.history\r\n          )}\r\n          to={`/updateCategory/${category.categoryIdentifier}`}\r\n        >\r\n          <button className=\"btn btn-warning float-right\">\r\n            <i className=\"fa fa-wrench\"></i>\r\n          </button>\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n    const userIsNotAdmin = (\r\n      <React.Fragment>\r\n        <i className=\"fa fa-arrow-circle-right category-arrow-icon\"></i>\r\n      </React.Fragment>\r\n    );\r\n    let adminButtons;\r\n    if (user.admin) {\r\n      adminButtons = userIsAdmin;\r\n    } else {\r\n      adminButtons = userIsNotAdmin;\r\n    }\r\n    return (\r\n      <div className=\"clearfix scale-button margin-bottom-category\">\r\n        <Link\r\n          onClick={this.onCategoryNameClick.bind(\r\n            this,\r\n            category.categoryIdentifier\r\n          )}\r\n          to={`/productsBoard/${category.categoryIdentifier}`}\r\n          className=\"nav-link active float-left category-link-deco category-text\"\r\n        >\r\n          <i className=\"button-left-product fa fa-toggle-right category-icon \"></i>\r\n          {category.categoryName}\r\n        </Link>\r\n        {adminButtons}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCategoryItem.propTypes = {\r\n  deleteCategory: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(mapStateToProps, {\r\n  deleteCategory,\r\n  getCategory,\r\n  getProductList\r\n})(CategoryItem);\r\n","import React, { Component } from \"react\";\r\nimport CategoryItem from \"./Category/CategoryItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCategories } from \"../actions/categoryActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    //every time we load component it hasto load also the categories\r\n    this.props.getCategories();\r\n  }\r\n\r\n  render() {\r\n    const { categories } = this.props.category;\r\n    const { user } = this.props.security;\r\n    const userIsAdmin = (\r\n      <React.Fragment>\r\n        <Link\r\n          to=\"/addCategory\"\r\n          className=\"btn  btn-success scale-button add-category-text-margin\"\r\n        >\r\n          Add category\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n    let adminButtons;\r\n    if (user.admin) {\r\n      adminButtons = userIsAdmin;\r\n    }\r\n    return (\r\n      <nav className=\"float-left col-md-2 d-inline-block header-background category-box-shadow\">\r\n        <div className=\"sidebar-sticky\">\r\n          <ul className=\"nav flex-column\">\r\n            {adminButtons}\r\n            <li className=\"nav-item \">\r\n              <h5 className=\" text-center align-items-center px-3 mt-4 mb-3 \">\r\n                <hr></hr>\r\n\r\n                <span className=\"categories-header-text\">\r\n                  <i className=\"fa fa-shopping-basket category-header-icon\"></i>\r\n                  Categories\r\n                </span>\r\n                <hr></hr>\r\n              </h5>\r\n            </li>\r\n            <li>\r\n              <span data-feather=\"home\"></span>\r\n              {categories.map(category => (\r\n                <CategoryItem key={category.id} category={category} />\r\n              ))}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  category: PropTypes.object.isRequired,\r\n  getCategories: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n//we taking from reducer the values\r\nconst mapStateToProps = state => ({\r\n  category: state.category,\r\n  security: state.security\r\n});\r\n//categories will be loaded everytime when we open the dashboard\r\nexport default connect(mapStateToProps, { getCategories })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (user, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/users/register\", user);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    //post -> login request\r\n    const res = await axios.post(\"/users/login\", LoginRequest);\r\n    //extract token\r\n    const { token } = res.data;\r\n    //store the token in the local storage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    //set token in the header\r\n    setJWTToken(token);\r\n    //decode token on react jwt-decode\r\n    const decoded = jwt_decode(token);\r\n    //disaptch to security reducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  //delete token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  //set header to false\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getShopMainData } from \"../../actions/shopMainDataActions\";\r\nimport { logout } from \"../../actions/securityAcions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Header extends Component {\r\n  refreshPage() {\r\n    window.parent.location = window.parent.location.href;\r\n  }\r\n  componentDidMount() {\r\n    this.props.getShopMainData();\r\n  }\r\n\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n    const userIsAdmin = (\r\n      <React.Fragment>\r\n        <Link\r\n          className=\"btn btn-success margin-left-button scale-button\"\r\n          to=\"/changeMainData\"\r\n        >\r\n          Edit page<i className=\"fa fa-edit header-buttons\"></i>\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n    let adminButton;\r\n    if (user.admin) {\r\n      adminButton = userIsAdmin;\r\n    }\r\n    const userIsLogged = (\r\n      <React.Fragment>\r\n        <p className=\"user-name-header\" to=\"\">\r\n          {user.username}\r\n        </p>\r\n        <Link to=\"/shoppingCart\" className=\" \">\r\n          <button className=\"btn btn-danger btn-warning margin-left-button scale-button\">\r\n            Cart\r\n            <i className=\"fa fa-shopping-cart header-buttons\"></i>\r\n          </button>\r\n        </Link>\r\n        {adminButton}\r\n        <button\r\n          className=\"btn btn-info margin-left-button scale-button\"\r\n          onClick={this.logout.bind(this)}\r\n        >\r\n          Log out <i className=\"fa fa-sign-out header-buttons \"></i>\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n\r\n    const { shopMainData } = this.props.shopMainData;\r\n    let address;\r\n    const changeHeaderAddress = () => {\r\n      if (validToken) {\r\n        address = \"/dashboard\";\r\n      } else {\r\n        address = \"\";\r\n      }\r\n    };\r\n    changeHeaderAddress();\r\n    let headerLoggedData;\r\n    if (validToken && user) {\r\n      headerLoggedData = userIsLogged;\r\n    }\r\n    return (\r\n      <div className=\"d-flex flex-column flex-md-row align-items-center p-2 px-md-4 header-background border-bottom shadow-sm\">\r\n        <h4 className=\"my-0 mr-md-auto header-shop-name scale-thing\">\r\n          <Link className=\"header-link-deco\" to={`${address}`}>\r\n            {shopMainData.shopName}\r\n          </Link>\r\n        </h4>\r\n        {headerLoggedData}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  shopMainData: PropTypes.object.isRequired,\r\n  getShopMainData: PropTypes.func.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  shopMainData: state.shopMainData,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { getShopMainData, logout })(Header);\r\n","import axios from \"axios\";\r\nimport { GET_SHOP_MAIN_DATA, GET_ERRORS } from \"./types\";\r\n\r\nexport const getShopMainData = () => async dispatch => {\r\n  const res = await axios.get(\"/shopMainData\");\r\n  dispatch({\r\n    type: GET_SHOP_MAIN_DATA,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const updateShopMainData = (shopMainData, history) => async dispatch => {\r\n  window.alert(\r\n    \"Remember to refresh the page after changing data!!! Without refreshing you will not be able to see updates\"\r\n  );\r\n  try {\r\n    await axios.post(\"/shopMainData\", shopMainData);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createCategory } from \"../../actions/categoryActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddCategory extends Component {\r\n  constructor() {\r\n    super();\r\n    //state is immutable. to put value you need to make new state\r\n    this.state = {\r\n      categoryName: \"\",\r\n      categoryIdentifier: \"\",\r\n      description: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    if (!this.props.security.user.admin) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    //put props from form to new state\r\n    const newCategory = {\r\n      categoryName: this.state.categoryName,\r\n      categoryIdentifier: this.state.categoryIdentifier,\r\n      description: this.state.description\r\n    };\r\n    //send new object to create uisng actions\r\n    this.props.createCategory(newCategory, this.props.history);\r\n  }\r\n  render() {\r\n    //errors will be assigned from current state to errors other way f.e : this.state.errors.categoryName\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register float-left col-md-10 d-inline-block \">\r\n        <div className=\"container login-page-background-color scale-thing\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create new category</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.categoryName\r\n                    })}\r\n                    placeholder=\"Category Name\"\r\n                    name=\"categoryName\"\r\n                    value={this.state.categoryName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.categoryName && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.categoryName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.categoryIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Category ID\"\r\n                    name=\"categoryIdentifier\"\r\n                    value={this.state.categoryIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.categoryIdentifier && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.categoryIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Category Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.description}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-dark btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  createCategory: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { createCategory })(AddCategory);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_CATEGORIES,\r\n  GET_CATEGORY,\r\n  DELETE_CATEGORY\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  category: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        //payload is loading information from app to this new states below\r\n        categories: action.payload\r\n      };\r\n    case GET_CATEGORY:\r\n      return {\r\n        ...state,\r\n        category: action.payload\r\n      };\r\n    case DELETE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: state.categories.filter(\r\n          category => category.categoryIdentifier !== action.payload //filter the difference between payloads to load categories\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PRODUCTLIST,\r\n  GET_PRODUCT,\r\n  DELETE_PRODUCT\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  //list of products and one specific product\r\n  products: [],\r\n  product: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PRODUCTLIST:\r\n      return {\r\n        ...state,\r\n        products: action.payload\r\n      };\r\n    case GET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        product: action.payload\r\n      };\r\n    case DELETE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: state.products.filter(\r\n          product => product.categorySequence !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_SHOPPING_CART, DELETE_PRODUCT_FROM_CART } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  shoppingCart: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_SHOPPING_CART:\r\n      return {\r\n        ...state,\r\n        shoppingCart: action.payload\r\n      };\r\n    case DELETE_PRODUCT_FROM_CART:\r\n      return {\r\n        ...state,\r\n        shoppingCart: state.shoppingCart.filter(\r\n          cartItem => cartItem.id !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_SHOP_MAIN_DATA } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  shopMainData: []\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_SHOP_MAIN_DATA:\r\n      return {\r\n        ...state,\r\n        shopMainData: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport categoryReducer from \"./categoryReducer\";\r\nimport productlistReducer from \"./productlistReducer\";\r\nimport shoppingCartReducer from \"./shoppingCartReducer\";\r\nimport shopMainDataReducer from \"./shopMainDataReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  category: categoryReducer,\r\n  productlist: productlistReducer,\r\n  shoppingCart: shoppingCartReducer,\r\n  shopMainData: shopMainDataReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getCategory, createCategory } from \"../../actions/categoryActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateCategory extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      categoryName: \"\",\r\n      categoryIdentifier: \"\",\r\n      description: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (!this.props.security.user.admin) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    const { id } = this.props.match.params;\r\n    this.props.getCategory(id, this.props.history);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateCategory = {\r\n      id: this.state.id,\r\n      categoryName: this.state.categoryName,\r\n      categoryIdentifier: this.state.categoryIdentifier,\r\n      description: this.state.description\r\n    };\r\n    this.props.createCategory(updateCategory, this.props.history);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    //he gets the values from props.category\r\n    const {\r\n      id,\r\n      categoryName,\r\n      categoryIdentifier,\r\n      description\r\n    } = nextProps.category;\r\n    //values taken from props are being set to update forms\r\n    this.setState({\r\n      id,\r\n      categoryName,\r\n      categoryIdentifier,\r\n      description\r\n    });\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register float-left col-md-10 d-inline-block\">\r\n        <div className=\"container login-page-background-color scale-thing\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Edit category</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.categoryName\r\n                    })}\r\n                    placeholder=\"Category Name\"\r\n                    name=\"categoryName\"\r\n                    value={this.state.categoryName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.categoryName && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.categoryName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Category ID\"\r\n                    value={this.state.categoryIdentifier}\r\n                    disabled\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Category Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.description}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-dark btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nUpdateCategory.propTypes = {\r\n  getCategory: PropTypes.func.isRequired,\r\n  createCategory: PropTypes.func.isRequired,\r\n  category: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  category: state.category.category,\r\n  errors: state.errors\r\n});\r\nexport default connect(mapStateToProps, { getCategory, createCategory })(\r\n  UpdateCategory\r\n);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_SHOPPING_CART,\r\n  GET_SHIPPING_OPTIONS,\r\n  DELETE_PRODUCT_FROM_CART\r\n} from \"./types\";\r\n\r\nexport const getShoppingCart = () => async dispatch => {\r\n  const res = await axios.get(\"http://localhost:8080/shoppingCart\");\r\n  dispatch({\r\n    type: GET_SHOPPING_CART,\r\n    payload: res.data\r\n  });\r\n};\r\nexport const getShippingOptions = () => async dispatch => {\r\n  const res = await axios.get(\"/shippingCost\");\r\n  dispatch({\r\n    type: GET_SHIPPING_OPTIONS,\r\n    payload: res.data\r\n  });\r\n};\r\nexport const deleteProductFromCart = id => async dispatch => {\r\n  await axios.delete(`/shoppingCart/${id}`);\r\n  dispatch({\r\n    type: DELETE_PRODUCT_FROM_CART,\r\n    payload: id\r\n  });\r\n};\r\nexport const addToShoppingCart = id => async dispatch => {\r\n  const emptyjson = {};\r\n  await axios.post(`/shoppingCart/${id}`, emptyjson);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProduct } from \"../../../actions/productlistActions\";\r\nimport { addToShoppingCart } from \"../../../actions/shoppingCartActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nclass Product extends Component {\r\n  onDeleteClick(productlist_id, pl_id) {\r\n    this.props.deleteProduct(productlist_id, pl_id);\r\n  }\r\n  onAddToCartClick(id) {\r\n    this.props.addToShoppingCart(id);\r\n  }\r\n\r\n  render() {\r\n    const { product } = this.props;\r\n    const { id } = this.props;\r\n    const { user } = this.props.security;\r\n    const userIsAdmin = (\r\n      <React.Fragment>\r\n        <div className=\" clearfix float-right display-inline-class \">\r\n          <Link className=\" display-block-class\" to={`/addProduct/${id}`}>\r\n            <button className=\"btn btn-success scale-button button-right-product\">\r\n              <i className=\"fa fa-plus-circle\"></i>\r\n            </button>\r\n          </Link>\r\n\r\n          <Link\r\n            to={`/updateProduct/${product.categoryIdentifier}/${product.categorySequence}`}\r\n            className=\" display-block-class\"\r\n          >\r\n            <button className=\"btn btn-warning scale-button button-right-product\">\r\n              <i className=\"fa fa-wrench\"></i>\r\n            </button>\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger display-block-class scale-button\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              product.categoryIdentifier,\r\n              product.categorySequence\r\n            )}\r\n          >\r\n            <i className=\"fa fa-trash\"></i>\r\n          </button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    let adminButtons;\r\n    if (user.admin) {\r\n      adminButtons = userIsAdmin;\r\n    }\r\n    return (\r\n      <div className=\"clearfix float-left product-list-container scale-product add-border-radius\">\r\n        <div className=\"add-box-shadow clearfix px-2 my-1 \">\r\n          <div className=\" photo-container float-left\">\r\n            <Link\r\n              to={`/moreInfo/${product.categoryIdentifier}/${product.categorySequence}`}\r\n            >\r\n              <img\r\n                className=\"scale-thing\"\r\n                src={`/images/${product.productPhoto}`}\r\n                alt=\"\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div className=\"float-left\">\r\n            <p className=\"product-name\">{product.productName}</p>\r\n            <p className=\"product-price\">\r\n              {product.productPrice} <i className=\"fa fa-euro\"></i>\r\n            </p>\r\n            <p className=\"more-info\">\r\n              <Popup\r\n                content=\"Click to get more info about this product\"\r\n                className=\"cart-popup\"\r\n                position=\"right center\"\r\n                trigger={\r\n                  <Link\r\n                    className=\" btn btn-warning scale-button\"\r\n                    to={`/moreInfo/${product.categoryIdentifier}/${product.categorySequence}`}\r\n                  >\r\n                    <i className=\"fa fa-info-circle button-left-product\"></i>\r\n                    more Info\r\n                  </Link>\r\n                }\r\n              />\r\n            </p>\r\n            <div className=\"add-to-cart\">\r\n              <Popup\r\n                content=\"Add product to your cart and continue shopping!\"\r\n                className=\"cart-popup\"\r\n                position=\"right center\"\r\n                trigger={\r\n                  <p\r\n                    className=\" btn btn-danger scale-button\"\r\n                    onClick={this.onAddToCartClick.bind(\r\n                      this,\r\n                      product.categorySequence\r\n                    )}\r\n                  >\r\n                    <i className=\"fa fa-cart-plus button-left-product\"></i>add\r\n                    to cart\r\n                  </p>\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <p className=\"product-short-description \">\r\n              {product.productShortDescription}\r\n            </p>\r\n          </div>\r\n          {adminButtons}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProduct.propTypes = {\r\n  deleteProduct: PropTypes.func.isRequired,\r\n  addToShoppingCart: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteProduct, addToShoppingCart })(\r\n  Product\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Product from \"./Products/Product\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getProductList } from \"../../actions/productlistActions\";\r\nimport { Link } from \"react-router-dom\";\r\nclass ProductsBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProductList(id);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    //REMEMEBR name in brackets has to be the same as the name in props\r\n    const { products } = this.props.productList;\r\n    const { errors } = this.props;\r\n    let BoardContent;\r\n    const productItem = products.map(product => (\r\n      <Product key={product.id} product={product} id={id} />\r\n    ));\r\n\r\n    const { user } = this.props.security;\r\n    const userIsAdmin = (\r\n      <React.Fragment>\r\n        <Link className=\"btn btn-success scale-button\" to={`/addProduct/${id}`}>\r\n          Add new product\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n    let adminButtons;\r\n    if (user.admin) {\r\n      adminButtons = userIsAdmin;\r\n    }\r\n    const boardAlgorithm = (errors, productItem) => {\r\n      if (productItem < 1) {\r\n        if (errors.categoryNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.categoryNotFound}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              <p>No Products on this board</p>\r\n              {adminButtons}\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <div>{productItem}</div>;\r\n      }\r\n    };\r\n    BoardContent = boardAlgorithm(errors, productItem);\r\n    return (\r\n      <div className=\"col-md-9 register float-left d-inline-block margin-bottom-product-list\">\r\n        <div>{BoardContent}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProductsBoard.propTypes = {\r\n  productList: PropTypes.object.isRequired,\r\n  getProductList: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  productList: state.productlist,\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProductList })(ProductsBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProduct } from \"../../../actions/productlistActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n    this.state = {\r\n      productName: \"\",\r\n      productPhoto: \"\",\r\n      productPrice: \"\",\r\n      productShortDescription: \"\",\r\n      productDescription: \"\",\r\n      categoryIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProduct = {\r\n      //dont need to pass category id because its passed from url\r\n      productName: this.state.productName,\r\n      productPhoto: this.state.productPhoto,\r\n      productPrice: this.state.productPrice,\r\n      productShortDescription: this.state.productShortDescription,\r\n      productDescription: this.state.productDescription\r\n    };\r\n    this.props.addProduct(\r\n      this.state.categoryIdentifier,\r\n      newProduct,\r\n      this.props.history\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    if (!this.props.security.user.admin) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  //if component receive props\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container login-page-background-color scale-thing\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h4 className=\"display-4 text-center\">Add New Product</h4>\r\n              <br></br>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productName\r\n                    })}\r\n                    placeholder=\"Product Name\"\r\n                    name=\"productName\"\r\n                    value={this.state.productName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.productName && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productPhoto\r\n                    })}\r\n                    placeholder=\"Name of the image with its extension f.e jpg, png. Size 200x200px\"\r\n                    name=\"productPhoto\"\r\n                    value={this.state.productPhoto}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.productPhoto && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productPhoto}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productPrice\r\n                    })}\r\n                    placeholder=\"Price of the product\"\r\n                    name=\"productPrice\"\r\n                    value={this.state.productPrice}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.productPrice && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productPrice}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productShortDescription\r\n                    })}\r\n                    placeholder=\"Short description of the product\"\r\n                    name=\"productShortDescription\"\r\n                    value={this.state.productShortDescription}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.productShortDescription && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productShortDescription}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productDescription\r\n                    })}\r\n                    placeholder=\"Description of the product\"\r\n                    name=\"productDescription\"\r\n                    value={this.state.productDescription}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.productDescription && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productDescription}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-dark btn-block mt-4\" />\r\n                <br></br>\r\n                <Link\r\n                  to={`/productsBoard/${id}`}\r\n                  className=\"btn btn-dark float-left\"\r\n                >\r\n                  Return to the list of products\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProduct.propTypes = {\r\n  addProduct: PropTypes.func.isRequired,\r\n  //to have acces to the errors\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProduct })(AddProduct);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { getProduct, updateProduct } from \"../../../actions/productlistActions\";\r\nimport PropTypes from \"prop-types\";\r\nclass UpdateProduct extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      categorySequence: \"\",\r\n      productName: \"\",\r\n      productPhoto: \"\",\r\n      productPrice: \"\",\r\n      productDescription: \"\",\r\n      productShortDescription: \"\",\r\n      categoryIdentifier: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (!this.props.security.user.admin) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    const { productlist_id, pl_id } = this.props.match.params;\r\n    this.props.getProduct(productlist_id, pl_id, this.props.history);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      categorySequence,\r\n      productName,\r\n      productPhoto,\r\n      productPrice,\r\n      productShortDescription,\r\n      productDescription,\r\n      categoryIdentifier\r\n    } = nextProps.product;\r\n    this.setState({\r\n      id,\r\n      categorySequence,\r\n      productName,\r\n      productPhoto,\r\n      productPrice,\r\n      productShortDescription,\r\n      productDescription,\r\n      categoryIdentifier\r\n    });\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedProduct = {\r\n      id: this.state.id,\r\n      categorySequence: this.state.categorySequence,\r\n      productName: this.state.productName,\r\n      productPhoto: this.state.productPhoto,\r\n      productPrice: this.state.productPrice,\r\n      productShortDescription: this.state.productShortDescription,\r\n      productDescription: this.state.productDescription,\r\n      categoryIdentifier: this.state.categoryIdentifier\r\n    };\r\n\r\n    this.props.updateProduct(\r\n      this.state.categoryIdentifier,\r\n      this.state.categorySequence,\r\n      updatedProduct,\r\n      this.props.history\r\n    );\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container login-page-background-color scale-thing\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h4 className=\"display-4 text-center\">Edit Product</h4>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productName\r\n                    })}\r\n                    placeholder=\"Product Name\"\r\n                    name=\"productName\"\r\n                    value={this.state.productName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.productName && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productPhoto\r\n                    })}\r\n                    placeholder=\"Put here name of the image with proper extension f.e jpg, png\"\r\n                    name=\"productPhoto\"\r\n                    value={this.state.productPhoto}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.productPhoto && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productPhoto}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productPrice\r\n                    })}\r\n                    placeholder=\"Price of the product\"\r\n                    name=\"productPrice\"\r\n                    value={this.state.productPrice}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.productPrice && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productPrice}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productShortDescription\r\n                    })}\r\n                    placeholder=\"Short description of the product\"\r\n                    name=\"productShortDescription\"\r\n                    value={this.state.productShortDescription}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.productShortDescription && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productShortDescription}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productDescription\r\n                    })}\r\n                    placeholder=\"Description of the product\"\r\n                    name=\"productDescription\"\r\n                    value={this.state.productDescription}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.productDescription && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productDescription}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-dark btn-block mt-4\" />\r\n                <br></br>\r\n                <Link\r\n                  to={`/productsBoard/${id}`}\r\n                  className=\"btn btn-dark float-left\"\r\n                >\r\n                  Return to the list of products\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProduct.propTypes = {\r\n  getProduct: PropTypes.func.isRequired,\r\n  updateProduct: PropTypes.func.isRequired,\r\n  product: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  product: state.productlist.product,\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProduct, updateProduct })(\r\n  UpdateProduct\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getProduct } from \"../../../actions/productlistActions\";\r\nimport { addToShoppingCart } from \"../../../actions/shoppingCartActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nclass MoreInfoProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      categorySequence: \"\",\r\n      productName: \"\",\r\n      productPhoto: \"\",\r\n      productPrice: \"\",\r\n      productDescription: \"\",\r\n      productShortDescription: \"\",\r\n      categoryIdentifier: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  onAddToCartClick(id) {\r\n    this.props.addToShoppingCart(id);\r\n  }\r\n  componentDidMount() {\r\n    const { productlist_id, pl_id } = this.props.match.params;\r\n    this.props.getProduct(productlist_id, pl_id, this.props.history);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      id,\r\n      categorySequence,\r\n      productName,\r\n      productPhoto,\r\n      productPrice,\r\n      productShortDescription,\r\n      productDescription,\r\n      categoryIdentifier\r\n    } = nextProps.product;\r\n    this.setState({\r\n      id,\r\n      categorySequence,\r\n      productName,\r\n      productPhoto,\r\n      productPrice,\r\n      productShortDescription,\r\n      productDescription,\r\n      categoryIdentifier\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { product } = this.props;\r\n    return (\r\n      <div className=\"col-md-8 d-inline-block add-box-shadow more-info-props\">\r\n        <img\r\n          className=\"d-block float-left more-info-image\"\r\n          src={`/images/${this.state.productPhoto}`}\r\n          alt=\"\"\r\n        ></img>\r\n        <div className=\"float-left d-block \">\r\n          <p className=\"more-info-product-name\">{this.state.productName}</p>\r\n\r\n          <p className=\"more-info-product-price \">\r\n            {this.state.productPrice} <i className=\"fa fa-euro\"></i>\r\n          </p>\r\n          <div className=\"text-left \">\r\n            <Popup\r\n              content=\"Add product to your cart and continue shopping!\"\r\n              className=\"cart-popup\"\r\n              position=\"right center\"\r\n              trigger={\r\n                <p\r\n                  className=\" btn btn-danger scale-button\"\r\n                  onClick={this.onAddToCartClick.bind(\r\n                    this,\r\n                    product.categorySequence\r\n                  )}\r\n                >\r\n                  add to cart\r\n                  <i className=\"fa fa-shopping-cart header-buttons\"></i>\r\n                </p>\r\n              }\r\n            />\r\n          </div>\r\n          <p className=\"text-left float-left  \">\r\n            <Link\r\n              className=\" btn btn-info scale-button \"\r\n              to={`/productsBoard/${product.categoryIdentifier}`}\r\n            >\r\n              <i className=\"fa fa-arrow-left button-left-product\"></i>back to\r\n              products\r\n            </Link>\r\n          </p>\r\n        </div>\r\n        <br></br>\r\n        <br></br>\r\n        <p className=\"more-info-product-description d-inline-block\">\r\n          {this.state.productDescription}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMoreInfoProduct.propTypes = {\r\n  getProduct: PropTypes.func.isRequired,\r\n  product: PropTypes.object.isRequired,\r\n  addToShoppingCart: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  product: state.productlist.product\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProduct, addToShoppingCart })(\r\n  MoreInfoProduct\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteProductFromCart } from \"../../actions/shoppingCartActions\";\r\nclass CartProduct extends Component {\r\n  onDeleteIconClick(id) {\r\n    this.props.deleteProductFromCart(id);\r\n  }\r\n  render() {\r\n    const { item } = this.props;\r\n    return (\r\n      <div className=\" float-left cart-product-container add-box-shadow scale-divs-in-cart\">\r\n        <img\r\n          className=\"float-left cart-product-photo\"\r\n          src={`/images/${item.productPhotoInCart}`}\r\n          alt=\"\"\r\n        ></img>\r\n        <div className=\"cart-product-credentials-container float-left\">\r\n          <p className=\"cart-product-name\">{item.productNameInCart}</p>\r\n          <p className=\"cart-product-price\">\r\n            {item.productPriceInCart} <i className=\"fa fa-euro\"></i>\r\n          </p>\r\n        </div>\r\n\r\n        <i\r\n          className=\"scale-button fa fa-trash cart-icon-trash float-right\"\r\n          onClick={this.onDeleteIconClick.bind(this, item.id)}\r\n        ></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nCartProduct.propTypes = {\r\n  deleteProductFromCart: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProductFromCart })(CartProduct);\r\n","import React, { Component } from \"react\";\r\nimport CartProduct from \"./CartProduct\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getShoppingCart } from \"../../actions/shoppingCartActions\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nclass CartProductList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shipping: 0,\r\n      isDisabled: true\r\n    };\r\n  }\r\n  onShippingButtonClick(value) {\r\n    this.setState({\r\n      shipping: value,\r\n      isDisabled: false\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.getShoppingCart();\r\n  }\r\n\r\n  render() {\r\n    var costOfProducts = 0;\r\n    const { shoppingCart } = this.props.shoppingCart;\r\n    const shoppingCartItem = shoppingCart.map(item => (\r\n      <CartProduct key={item.id} item={item} />\r\n    ));\r\n    function handleToken(token, addresses) {\r\n      console.log({ token, addresses });\r\n    }\r\n    const checkoutEnabled = (\r\n      <React.Fragment>\r\n        <StripeCheckout\r\n          className=\"scale-button\"\r\n          currency=\"EUR\"\r\n          stripeKey=\"pk_test_L62B8bk6mZ53yvnBXxzvCZ6i00rZlLuij6\"\r\n          token={handleToken}\r\n          billingAddress\r\n          shippingAddress\r\n          amount={(costOfProducts + this.state.shipping) * 100}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n    const checkoutDisabled = (\r\n      <React.Fragment>\r\n        <StripeCheckout disabled />\r\n      </React.Fragment>\r\n    );\r\n    let isCheckoutButtonWorking;\r\n    if (this.state.isDisabled) {\r\n      isCheckoutButtonWorking = checkoutDisabled;\r\n    } else {\r\n      isCheckoutButtonWorking = checkoutEnabled;\r\n    }\r\n    shoppingCart.map(item => (costOfProducts += item.productPriceInCart));\r\n    const renderProducts = () => {\r\n      if (shoppingCartItem < 1) {\r\n        return (\r\n          <div className=\"alert alert-info text-center\" role=\"alert\">\r\n            <p>Your cart is empty. Let's shopping</p>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div>\r\n            {shoppingCartItem}\r\n            <div className=\"cart-right-container \">\r\n              <div className=\" add-box-shadow cart-price-checkout-container scale-divs-in-cart\">\r\n                <div className=\"\">\r\n                  <label className=\"cart-label-price\">Cost:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">{costOfProducts} Euro</label>\r\n                </div>\r\n                <div className=\"clear-both \"></div>\r\n                <div>\r\n                  <label className=\"cart-label-price\">Ship:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">\r\n                    {this.state.shipping} Euro\r\n                  </label>\r\n                </div>\r\n                <div className=\"clear-both \"></div>\r\n                <div>\r\n                  <label className=\"cart-label-price \">Total Cost:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">\r\n                    {costOfProducts + this.state.shipping} Euro\r\n                  </label>\r\n                </div>\r\n\r\n                <hr></hr>\r\n\r\n                {isCheckoutButtonWorking}\r\n              </div>\r\n\r\n              <div className=\"btn-group-vertical btn-group-toggle cart-shipping-options scale-divs-in-cart\">\r\n                <label className=\"btn btn-secondary active text-left\">\r\n                  Choose shipping option\r\n                </label>\r\n                <label className=\"btn btn-secondary text-left\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"options\"\r\n                    id=\"option1\"\r\n                    onClick={() => this.onShippingButtonClick(5)}\r\n                  />\r\n                  <label className=\"cart-label-price\">DPD:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">5 Euro</label>\r\n                </label>\r\n                <label className=\"btn btn-secondary text-left\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"options\"\r\n                    id=\"option2\"\r\n                    onClick={() => this.onShippingButtonClick(6)}\r\n                  />\r\n                  <label className=\"cart-label-price\">DHL:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">6 Euro</label>\r\n                </label>\r\n                <label className=\"btn btn-secondary text-left\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"options\"\r\n                    id=\"option3\"\r\n                    onClick={() => this.onShippingButtonClick(7)}\r\n                  />\r\n                  <label className=\"cart-label-price\">Fedex:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">7 Euro</label>\r\n                </label>\r\n                <label className=\"btn btn-secondary text-left\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"options\"\r\n                    id=\"option4\"\r\n                    onClick={() => this.onShippingButtonClick(8)}\r\n                  />\r\n                  <label className=\"cart-label-price\">Amazon:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">8 Euro</label>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n    let CartItems = renderProducts();\r\n    return <div className=\"margins-shopping-list\">{CartItems}</div>;\r\n  }\r\n}\r\n\r\nCartProductList.propTypes = {\r\n  getShoppingCart: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  shoppingCart: state.shoppingCart\r\n});\r\n\r\nexport default connect(mapStateToProps, { getShoppingCart })(CartProductList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass InfoImage extends Component {\r\n  render() {\r\n    const { shopMainData } = this.props.shopMainData;\r\n    return (\r\n      <div className=\"info-image\">\r\n        <img src={`/images/${shopMainData.pictureOnTheDashboard}`} alt=\"\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  shopMainData: state.shopMainData\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(InfoImage);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    const { shopMainData } = this.props.shopMainData;\r\n    return (\r\n      <footer className=\"page-footer font-small footer\">\r\n        <div className=\" copyright footer-copyright py-2 float-left  \">\r\n          © 2019 Copyright: Kamil Kamyszek\r\n        </div>\r\n        <div className=\"contact py-2 text-right  \">\r\n          Contact: {shopMainData.contactEmail}\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  shopMainData: state.shopMainData\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Footer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { updateShopMainData } from \"../../actions/shopMainDataActions\";\r\nclass ChangeMainData extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      shopName: \"\",\r\n      pictureOnTheDashboard: \"\",\r\n      contactEmail: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.security.user.admin) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    const {\r\n      id,\r\n      shopName,\r\n      pictureOnTheDashboard,\r\n      contactEmail\r\n    } = this.props.shopMainData;\r\n    this.setState({\r\n      id,\r\n      shopName,\r\n      pictureOnTheDashboard,\r\n      contactEmail\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      shopName,\r\n      pictureOnTheDashboard,\r\n      contactEmail\r\n    } = nextProps.shopMainData;\r\n    this.setState({\r\n      id,\r\n      shopName,\r\n      pictureOnTheDashboard,\r\n      contactEmail\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateShopMainData = {\r\n      id: 1,\r\n      shopName: this.state.shopName,\r\n      pictureOnTheDashboard: this.state.pictureOnTheDashboard,\r\n      contactEmail: this.state.contactEmail\r\n    };\r\n    this.props.updateShopMainData(updateShopMainData, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container login-page-background-color scale-thing\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-10 m-auto\">\r\n            <h4 className=\"display-4 text-center\">Change Main Data</h4>\r\n            <br></br>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.shopName\r\n                  })}\r\n                  name=\"shopName\"\r\n                  placeholder=\"Name of the shop\"\r\n                  value={this.state.shopName}\r\n                  onChange={this.onChange}\r\n                />\r\n                {errors.shopName && (\r\n                  <div className=\"invalid-feedback text-right\">\r\n                    {errors.shopName}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.pictureOnTheDashboard\r\n                  })}\r\n                  name=\"pictureOnTheDashboard\"\r\n                  placeholder=\"Name of the main page image with its extension f.e jpg, png. Size 1200x550px\"\r\n                  value={this.state.pictureOnTheDashboard}\r\n                  onChange={this.onChange}\r\n                />\r\n                {errors.pictureOnTheDashboard && (\r\n                  <div className=\"invalid-feedback text-right\">\r\n                    {errors.pictureOnTheDashboard}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.contactEmail\r\n                  })}\r\n                  name=\"contactEmail\"\r\n                  placeholder=\"Contact email on the footer\"\r\n                  value={this.state.contactEmail}\r\n                  onChange={this.onChange}\r\n                />\r\n                {errors.contactEmail && (\r\n                  <div className=\"invalid-feedback text-right\">\r\n                    {errors.contactEmail}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <input type=\"submit\" className=\"btn btn-dark btn-block mt-4\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nChangeMainData.propTypes = {\r\n  updateShopMainData: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  shopMainData: state.shopMainData.shopMainData,\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateShopMainData })(ChangeMainData);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class EnterPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"enter-page-background-color scale-thing \">\r\n        <p className=\"enter-page-header-text \">Welcome to my store!</p>\r\n        <p className=\"enter-page-login-register-message\">\r\n          Before you start shopping, let's log in or create new account\r\n        </p>\r\n        <Link className=\"btn btn-dark enter-page-buttons\" to=\"/login\">\r\n          Log in\r\n        </Link>\r\n        <Link className=\"btn btn-dark enter-page-buttons\" to=\"/register\">\r\n          Sign Up\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { login } from \"../../actions/securityAcions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(loginRequest);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container login-page-background-color scale-thing\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <p className=\"login-register-header\">Log in and do the shopping!</p>\r\n          <hr></hr>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.username\r\n              })}\r\n              placeholder=\"Username\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.onChange}\r\n            />\r\n            {errors.username && (\r\n              <div className=\"invalid-feedback text-right\">\r\n                {errors.username}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.password\r\n              })}\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.onChange}\r\n            />\r\n            {errors.password && (\r\n              <div className=\"invalid-feedback text-right\">\r\n                {errors.password}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <br></br>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-dark button-width scale-button\"\r\n          >\r\n            Log in\r\n          </button>\r\n        </form>\r\n        <hr></hr>\r\n        <Link to=\"/register\">\r\n          <button className=\" btn btn-dark button-width scale-button\">\r\n            Don't have an account? Sign up!\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createNewUser } from \"../../actions/securityAcions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container register-page-background-color scale-thing\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <p className=\"login-register-header\">Set up new account</p>\r\n          <hr></hr>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.username\r\n              })}\r\n              placeholder=\"Username\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.onChange}\r\n            />\r\n            {errors.username && (\r\n              <div className=\"invalid-feedback text-right\">\r\n                {errors.username}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.fullName\r\n              })}\r\n              placeholder=\"Full name\"\r\n              name=\"fullName\"\r\n              value={this.state.fullName}\r\n              onChange={this.onChange}\r\n            />\r\n            {errors.fullName && (\r\n              <div className=\"invalid-feedback text-right\">\r\n                {errors.fullName}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.password\r\n              })}\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.onChange}\r\n            />\r\n            {errors.password && (\r\n              <div className=\"invalid-feedback text-right\">\r\n                {errors.password}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.confirmPassword\r\n              })}\r\n              placeholder=\"Confirm password\"\r\n              name=\"confirmPassword\"\r\n              value={this.state.confirmPassword}\r\n              onChange={this.onChange}\r\n            />\r\n            {errors.confirmPassword && (\r\n              <div className=\"invalid-feedback text-right\">\r\n                {errors.confirmPassword}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <br></br>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-dark button-width scale-button\"\r\n          >\r\n            Sign up\r\n          </button>\r\n        </form>\r\n        <hr></hr>\r\n        <Link to=\"/login\">\r\n          <button className=\" btn btn-dark button-width   scale-button \">\r\n            Already have an account? Log in!\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./fontello/css/fontello.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport AddCategory from \"./components/Category/AddCategory\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateCategory from \"./components/Category/UpdateCategory\";\nimport ProductsBoard from \"./components/ProductsBoard/ProductsBoard\";\nimport AddProduct from \"./components/ProductsBoard/Products/AddProduct\";\nimport UpdateProduct from \"./components/ProductsBoard/Products/UpdateProduct\";\nimport MoreInfoProduct from \"./components/ProductsBoard/Products/MoreInfoProduct\";\nimport CartProductList from \"./components/ShoppingCart/CartProductList\";\nimport InfoImage from \"./components/InfoImage\";\nimport Footer from \"./components/Layout/Footer\";\nimport ChangeMainData from \"./components/ChangeMainData/ChangeMainData\";\nimport EnterPage from \"./components/Layout/EnterPage\";\nimport Login from \"./components/User/Login\";\nimport Register from \"./components/User/Register\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityAcions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\n//tokent is being kept in local storage\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\n//url with parameters needs to be separated routed if we want many url to one component\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/\" component={EnterPage} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n\n          <SecuredRoute\n            exact\n            path=\"/updateCategory/:id\"\n            component={Dashboard}\n          />\n          <SecuredRoute exact path=\"/productsBoard/:id\" component={Dashboard} />\n          <SecuredRoute exact path=\"/addProduct/:id\" component={Dashboard} />\n          <SecuredRoute\n            exact\n            path=\"/updateProduct/:productlist_id/:pl_id\"\n            component={Dashboard}\n          />\n          <SecuredRoute\n            exact\n            path=\"/moreInfo/:productlist_id/:pl_id\"\n            component={Dashboard}\n          />\n          <SecuredRoute exact path=\"/addCategory\" component={Dashboard} />\n          <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n          <SecuredRoute exact path=\"/dashboard\" component={InfoImage} />\n          <SecuredRoute exact path=\"/addCategory\" component={AddCategory} />\n          <SecuredRoute\n            exact\n            path=\"/shoppingCart\"\n            component={CartProductList}\n          />\n          <SecuredRoute\n            exact\n            path=\"/updateCategory/:id\"\n            component={UpdateCategory}\n          />\n          <SecuredRoute\n            exact\n            path=\"/productsBoard/:id\"\n            component={ProductsBoard}\n          />\n          <SecuredRoute exact path=\"/addProduct/:id\" component={AddProduct} />\n          <SecuredRoute\n            exact\n            path=\"/changeMainData\"\n            component={ChangeMainData}\n          />\n          <SecuredRoute\n            exact\n            path=\"/moreInfo/:productlist_id/:pl_id\"\n            component={MoreInfoProduct}\n          />\n          <SecuredRoute\n            exact\n            path=\"/updateProduct/:productlist_id/:pl_id\"\n            component={UpdateProduct}\n          />\n\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}