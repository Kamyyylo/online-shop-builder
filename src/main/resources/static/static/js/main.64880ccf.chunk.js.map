{"version":3,"sources":["actions/types.js","actions/categoryActions.js","actions/productlistActions.js","components/Category/CategoryItem.js","components/Dashboard.js","components/Category/CreateCategoryButton.js","securityUtils/setJWTToken.js","actions/securityAcions.js","components/Layout/Header.js","actions/shopMainDataActions.js","components/Category/AddCategory.js","reducers/errorReducer.js","reducers/categoryReducer.js","reducers/productlistReducer.js","reducers/shoppingCartReducer.js","reducers/shopMainDataReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Category/UpdateCategory.js","actions/shoppingCartActions.js","components/ProductsBoard/Products/Product.js","components/ProductsBoard/ProductsBoard.js","components/ProductsBoard/Products/AddProduct.js","components/ProductsBoard/Products/UpdateProduct.js","components/ProductsBoard/Products/MoreInfoProduct.js","components/ShoppingCart/CartProduct.js","components/ShoppingCart/CartProductList.js","components/InfoImage.js","components/Layout/Footer.js","components/ChangeMainData/ChangeMainData.js","components/Layout/EnterPage.js","components/User/Login.js","components/User/Register.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createCategory","category","history","dispatch","a","axios","post","push","type","payload","response","data","getCategory","id","get","res","getProductList","productlist_id","getProduct","pl_id","CategoryItem","onDeleteClick","props","deleteCategory","onUpdateClick","onCategoryNameClick","adminButtons","this","user","security","userIsAdmin","Fragment","className","onClick","bind","categoryIdentifier","to","admin","categoryName","Component","connect","state","window","confirm","delete","Dashboard","getCategories","categories","data-feather","map","key","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","parent","location","href","getShopMainData","adminButton","validToken","address","headerLoggedData","userIsLogged","username","shopMainData","shopName","AddCategory","description","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newCategory","classnames","placeholder","initialState","products","product","shoppingCart","booleanActionPayload","combineReducers","action","filter","productlist","categorySequence","cartItem","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateCategory","match","params","updateCategory","disabled","addToShoppingCart","emptyjson","Product","deleteProduct","src","productPhoto","alt","productName","productPrice","Popup","content","position","trigger","onAddToCartClick","productShortDescription","ProductsBoard","BoardContent","productList","productItem","categoryNotFound","role","boardAlgorithm","AddProduct","productDescription","newProduct","addProduct","UpdateProduct","updatedProduct","updateProduct","patch","MoreInfoProduct","CartProduct","deleteProductFromCart","item","productPhotoInCart","productNameInCart","productPriceInCart","onDeleteIconClick","CartProductList","shipping","getShoppingCart","costOfProducts","shoppingCartItem","handleToken","addresses","console","log","CartItems","currency","stripeKey","billingAddress","shippingAddress","amount","onShippingButtonClick","InfoImage","pictureOnTheDashboard","Footer","contactEmail","ChangeMainData","updateShopMainData","alert","EnterPage","Login","password","loginRequest","login","LoginRequest","setItem","decoded","jwt_decode","Register","fullName","confirmPassword","newUser","createNewUser","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64880ccf.chunk.js","sourcesContent":["//Errors\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\n//Categories types\r\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\r\nexport const GET_CATEGORY = \"GET_CATEGORY\";\r\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\r\n//ProductList and product types\r\nexport const GET_PRODUCTLIST = \"GET_PRODUCTLIST\";\r\nexport const GET_PRODUCT = \"GET_PRODUCT\";\r\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\r\n//Shopping Cart types\r\nexport const GET_SHOPPING_CART = \"GET_SHOPPING_CART\";\r\n//Shipping Options types\r\nexport const GET_SHIPPING_OPTIONS = \"GET_SHIPPING_OPTIONS\";\r\nexport const DELETE_PRODUCT_FROM_CART = \"DELETE_PRODUCT_FROM_CART\";\r\n//Shop Main Data types\r\nexport const GET_SHOP_MAIN_DATA = \"GET_SHOP_MAIN_DATA\";\r\n//User types\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_CATEGORIES,\r\n  GET_CATEGORY,\r\n  DELETE_CATEGORY\r\n} from \"../actions/types\";\r\n\r\n//history pushes as to dashboard if we add category\r\nexport const createCategory = (category, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/category\", category);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCategories = () => async dispatch => {\r\n  const res = await axios.get(\"/category/all\");\r\n  dispatch({\r\n    type: GET_CATEGORIES,\r\n    //this payload is being load to the reducer\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getCategory = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/category/${id}`);\r\n    dispatch({\r\n      type: GET_CATEGORY,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteCategory = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure you want to delete the whole category and all products that belongs to it ?\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/category/${id}`);\r\n    dispatch({\r\n      type: DELETE_CATEGORY,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_PRODUCTLIST,\r\n  GET_PRODUCT,\r\n  DELETE_PRODUCT\r\n} from \"../actions/types\";\r\n\r\nexport const addProduct = (\r\n  productlist_id,\r\n  product,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/productlist/${productlist_id}`, product);\r\n    history.push(`/productsBoard/${productlist_id}`);\r\n    //if everything is ok we can clean the errors\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductList = productlist_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/productlist/${productlist_id}`);\r\n    dispatch({\r\n      type: GET_PRODUCTLIST,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProduct = (\r\n  productlist_id,\r\n  pl_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/productlist/${productlist_id}/${pl_id}`);\r\n    dispatch({\r\n      type: GET_PRODUCT,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    //validation to prevent putting wrong ids\r\n    //should call to dashboard\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProduct = (\r\n  productlist_id,\r\n  pl_id,\r\n  updatedProduct,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(\r\n      `/productlist/${productlist_id}/${pl_id}`,\r\n      updatedProduct\r\n    );\r\n    history.push(`/productsBoard/${productlist_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (productlist_id, pl_id) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `Are you sure you want to delete this product? This action cannot be undone`\r\n    )\r\n  )\r\n    await axios.delete(`/productlist/${productlist_id}/${pl_id}`);\r\n  dispatch({\r\n    type: DELETE_PRODUCT,\r\n    //im going to use this id in the future\r\n    payload: pl_id\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteCategory, getCategory } from \"../../actions/categoryActions\";\r\nimport { getProductList } from \"../../actions/productlistActions\";\r\n\r\nclass CategoryItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteCategory(id);\r\n  };\r\n  onUpdateClick = (id, history) => {\r\n    this.props.getCategory(id, history);\r\n  };\r\n  onCategoryNameClick = id => {\r\n    this.props.getProductList(id);\r\n  };\r\n\r\n  render() {\r\n    const { category } = this.props;\r\n\r\n    const { user } = this.props.security;\r\n    const userIsAdmin = (\r\n      <React.Fragment>\r\n        <button\r\n          className=\"btn btn-danger float-right float-right\"\r\n          onClick={this.onDeleteClick.bind(this, category.categoryIdentifier)}\r\n        >\r\n          <i className=\"fa fa-trash\"></i>\r\n        </button>\r\n        <Link\r\n          onClick={this.onUpdateClick.bind(\r\n            this,\r\n            category.categoryIdentifier,\r\n            this.props.history\r\n          )}\r\n          to={`/updateCategory/${category.categoryIdentifier}`}\r\n        >\r\n          <button className=\"btn btn-warning float-right\">\r\n            <i className=\"fa fa-wrench\"></i>\r\n          </button>\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n    let adminButtons;\r\n    if (user.admin) {\r\n      adminButtons = userIsAdmin;\r\n    }\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Link\r\n          onClick={this.onCategoryNameClick.bind(\r\n            this,\r\n            category.categoryIdentifier\r\n          )}\r\n          to={`/productsBoard/${category.categoryIdentifier}`}\r\n          className=\"nav-link active float-left\"\r\n        >\r\n          {category.categoryName}\r\n        </Link>\r\n        {adminButtons}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCategoryItem.propTypes = {\r\n  deleteCategory: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(mapStateToProps, {\r\n  deleteCategory,\r\n  getCategory,\r\n  getProductList\r\n})(CategoryItem);\r\n","import React, { Component } from \"react\";\r\nimport CategoryItem from \"./Category/CategoryItem\";\r\nimport CreateCategoryButton from \"./Category/CreateCategoryButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCategories } from \"../actions/categoryActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    //every time we load component it hasto load also the categories\r\n    this.props.getCategories();\r\n  }\r\n\r\n  render() {\r\n    const { categories } = this.props.category;\r\n    return (\r\n      <nav className=\"float-left col-md-2 d-inline-block  bg-light sidebar \">\r\n        <div className=\"sidebar-sticky\">\r\n          <ul className=\"nav flex-column\">\r\n            <Link to=\"/addCategory\" className=\"btn  btn-primary\">\r\n              Create new category\r\n            </Link>\r\n            <li className=\"nav-item\">\r\n              <h5 className=\"sidebar-heading  text-center align-items-center px-3 mt-4 mb-1 text-muted\">\r\n                <span>Categories</span>\r\n              </h5>\r\n            </li>\r\n            <li>\r\n              <span data-feather=\"home\"></span>\r\n              {categories.map(category => (\r\n                <CategoryItem key={category.id} category={category} />\r\n              ))}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  category: PropTypes.object.isRequired,\r\n  getCategories: PropTypes.func.isRequired\r\n};\r\n//we taking from reducer the values\r\nconst mapStateToProps = state => ({\r\n  category: state.category\r\n});\r\n//categories will be loaded everytime when we open the dashboard\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getCategories }\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass CreateCategoryButton extends Component {\r\n  render() {\r\n    return (\r\n      //React.Fragment allowsa user not to use another div when we have some html like here\r\n      <React.Fragment>\r\n        <Link to=\"/addCategory\" className=\"btn  btn-primary\">\r\n          Create new category\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateCategoryButton;\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (user, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/users/register\", user);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    //post -> login request\r\n    const res = await axios.post(\"/users/login\", LoginRequest);\r\n    //extract token\r\n    const { token } = res.data;\r\n    //store the token in the local storage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    //set token in the header\r\n    setJWTToken(token);\r\n    //decode token on react jwt-decode\r\n    const decoded = jwt_decode(token);\r\n    //disaptch to security reducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  //delete token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  //set header to false\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getShopMainData } from \"../../actions/shopMainDataActions\";\r\nimport { logout } from \"../../actions/securityAcions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Header extends Component {\r\n  refreshPage() {\r\n    window.parent.location = window.parent.location.href;\r\n  }\r\n  componentDidMount() {\r\n    this.props.getShopMainData();\r\n  }\r\n\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n    const userIsAdmin = (\r\n      <React.Fragment>\r\n        <Link className=\"btn btn-success\" to=\"/changeMainData\">\r\n          Edit page<i className=\"fa fa-edit\"></i>\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n    let adminButton;\r\n    if (user.admin) {\r\n      adminButton = userIsAdmin;\r\n    }\r\n    const userIsLogged = (\r\n      <React.Fragment>\r\n        <p className=\"p-2 text-dark\" to=\"\">\r\n          {user.username}\r\n        </p>\r\n        <Link to=\"/shoppingCart\" className=\" p-2 \">\r\n          <button className=\"btn btn-lg btn-warning\">\r\n            Cart\r\n            <i className=\"fa fa-shopping-cart\"></i>\r\n          </button>\r\n        </Link>\r\n        {adminButton}\r\n\r\n        <p className=\"btn btn-primary\" onClick={this.logout.bind(this)}>\r\n          Log out <i className=\"fa fa-sign-out\"></i>\r\n        </p>\r\n      </React.Fragment>\r\n    );\r\n\r\n    const { shopMainData } = this.props.shopMainData;\r\n    let address;\r\n    const changeHeaderAddress = () => {\r\n      if (validToken) {\r\n        address = \"/dashboard\";\r\n      } else {\r\n        address = \"\";\r\n      }\r\n    };\r\n    changeHeaderAddress();\r\n    let headerLoggedData;\r\n    if (validToken && user) {\r\n      headerLoggedData = userIsLogged;\r\n    }\r\n    return (\r\n      <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\r\n        <h4 className=\"my-0 mr-md-auto font-weight-normal\">\r\n          <Link to={`${address}`}>{shopMainData.shopName}</Link>\r\n        </h4>\r\n        {headerLoggedData}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  shopMainData: PropTypes.object.isRequired,\r\n  getShopMainData: PropTypes.func.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  shopMainData: state.shopMainData,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { getShopMainData, logout })(Header);\r\n","import axios from \"axios\";\r\nimport { GET_SHOP_MAIN_DATA, GET_ERRORS } from \"./types\";\r\n\r\nexport const getShopMainData = () => async dispatch => {\r\n  const res = await axios.get(\"/shopMainData\");\r\n  dispatch({\r\n    type: GET_SHOP_MAIN_DATA,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const updateShopMainData = (shopMainData, history) => async dispatch => {\r\n  window.alert(\r\n    \"Remember to refresh the page after changing data!!! Without refreshing you will not be able to see updates\"\r\n  );\r\n  try {\r\n    await axios.post(\"/shopMainData\", shopMainData);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createCategory } from \"../../actions/categoryActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddCategory extends Component {\r\n  constructor() {\r\n    super();\r\n    //state is immutable. to put value you need to make new state\r\n    this.state = {\r\n      categoryName: \"\",\r\n      categoryIdentifier: \"\",\r\n      description: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    //put props from form to new state\r\n    const newCategory = {\r\n      categoryName: this.state.categoryName,\r\n      categoryIdentifier: this.state.categoryIdentifier,\r\n      description: this.state.description\r\n    };\r\n    //send new object to create uisng actions\r\n    this.props.createCategory(newCategory, this.props.history);\r\n  }\r\n  render() {\r\n    //errors will be assigned from current state to errors other way f.e : this.state.errors.categoryName\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register float-left col-md-9 d-inline-block\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create new category</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.categoryName\r\n                    })}\r\n                    placeholder=\"Category Name\"\r\n                    name=\"categoryName\"\r\n                    value={this.state.categoryName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.categoryName && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.categoryName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.categoryIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Category ID\"\r\n                    name=\"categoryIdentifier\"\r\n                    value={this.state.categoryIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.categoryIdentifier && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.categoryIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Category Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.description}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  createCategory: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { createCategory }\r\n)(AddCategory);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_CATEGORIES,\r\n  GET_CATEGORY,\r\n  DELETE_CATEGORY\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  category: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        //payload is loading information from app to this new states below\r\n        categories: action.payload\r\n      };\r\n    case GET_CATEGORY:\r\n      return {\r\n        ...state,\r\n        category: action.payload\r\n      };\r\n    case DELETE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: state.categories.filter(\r\n          category => category.categoryIdentifier !== action.payload //filter the difference between payloads to load categories\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PRODUCTLIST,\r\n  GET_PRODUCT,\r\n  DELETE_PRODUCT\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  //list of products and one specific product\r\n  products: [],\r\n  product: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PRODUCTLIST:\r\n      return {\r\n        ...state,\r\n        products: action.payload\r\n      };\r\n    case GET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        product: action.payload\r\n      };\r\n    case DELETE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: state.products.filter(\r\n          product => product.categorySequence !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_SHOPPING_CART, DELETE_PRODUCT_FROM_CART } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  shoppingCart: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_SHOPPING_CART:\r\n      return {\r\n        ...state,\r\n        shoppingCart: action.payload\r\n      };\r\n    case DELETE_PRODUCT_FROM_CART:\r\n      return {\r\n        ...state,\r\n        shoppingCart: state.shoppingCart.filter(\r\n          cartItem => cartItem.id !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_SHOP_MAIN_DATA } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  shopMainData: []\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_SHOP_MAIN_DATA:\r\n      return {\r\n        ...state,\r\n        shopMainData: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport categoryReducer from \"./categoryReducer\";\r\nimport productlistReducer from \"./productlistReducer\";\r\nimport shoppingCartReducer from \"./shoppingCartReducer\";\r\nimport shopMainDataReducer from \"./shopMainDataReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  category: categoryReducer,\r\n  productlist: productlistReducer,\r\n  shoppingCart: shoppingCartReducer,\r\n  shopMainData: shopMainDataReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getCategory, createCategory } from \"../../actions/categoryActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateCategory extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      categoryName: \"\",\r\n      categoryIdentifier: \"\",\r\n      description: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (!this.props.security.user.admin) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    const { id } = this.props.match.params;\r\n    this.props.getCategory(id, this.props.history);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateCategory = {\r\n      id: this.state.id,\r\n      categoryName: this.state.categoryName,\r\n      categoryIdentifier: this.state.categoryIdentifier,\r\n      description: this.state.description\r\n    };\r\n    this.props.createCategory(updateCategory, this.props.history);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    //he gets the values from props.category\r\n    const {\r\n      id,\r\n      categoryName,\r\n      categoryIdentifier,\r\n      description\r\n    } = nextProps.category;\r\n    //values taken from props are being set to update forms\r\n    this.setState({\r\n      id,\r\n      categoryName,\r\n      categoryIdentifier,\r\n      description\r\n    });\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register float-left col-md-9 d-inline-block\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Edit category</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.categoryName\r\n                    })}\r\n                    placeholder=\"Category Name\"\r\n                    name=\"categoryName\"\r\n                    value={this.state.categoryName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.categoryName && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.categoryName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Category ID\"\r\n                    value={this.state.categoryIdentifier}\r\n                    disabled\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Category Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.description}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nUpdateCategory.propTypes = {\r\n  getCategory: PropTypes.func.isRequired,\r\n  createCategory: PropTypes.func.isRequired,\r\n  category: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  category: state.category.category,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getCategory, createCategory }\r\n)(UpdateCategory);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_SHOPPING_CART,\r\n  GET_SHIPPING_OPTIONS,\r\n  DELETE_PRODUCT_FROM_CART\r\n} from \"./types\";\r\n\r\nexport const getShoppingCart = () => async dispatch => {\r\n  const res = await axios.get(\"http://localhost:8080/shoppingCart\");\r\n  dispatch({\r\n    type: GET_SHOPPING_CART,\r\n    payload: res.data\r\n  });\r\n};\r\nexport const getShippingOptions = () => async dispatch => {\r\n  const res = await axios.get(\"/shippingCost\");\r\n  dispatch({\r\n    type: GET_SHIPPING_OPTIONS,\r\n    payload: res.data\r\n  });\r\n};\r\nexport const deleteProductFromCart = id => async dispatch => {\r\n  await axios.delete(`/shoppingCart/${id}`);\r\n  dispatch({\r\n    type: DELETE_PRODUCT_FROM_CART,\r\n    payload: id\r\n  });\r\n};\r\nexport const addToShoppingCart = id => async dispatch => {\r\n  const emptyjson = {};\r\n  await axios.post(`/shoppingCart/${id}`, emptyjson);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProduct } from \"../../../actions/productlistActions\";\r\nimport { addToShoppingCart } from \"../../../actions/shoppingCartActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nclass Product extends Component {\r\n  onDeleteClick(productlist_id, pl_id) {\r\n    this.props.deleteProduct(productlist_id, pl_id);\r\n  }\r\n  onAddToCartClick(id) {\r\n    this.props.addToShoppingCart(id);\r\n  }\r\n\r\n  render() {\r\n    const { product } = this.props;\r\n    const { id } = this.props;\r\n    const { user } = this.props.security;\r\n    const userIsAdmin = (\r\n      <React.Fragment>\r\n        <div className=\" clearfix float-right display-inline-class \">\r\n          <Link className=\" display-block-class\" to={`/addProduct/${id}`}>\r\n            <button className=\"btn btn-success\">\r\n              <i className=\"fa fa-plus-circle\"></i>\r\n            </button>\r\n          </Link>\r\n\r\n          <Link\r\n            to={`/updateProduct/${product.categoryIdentifier}/${product.categorySequence}`}\r\n            className=\" display-block-class\"\r\n          >\r\n            <button className=\"btn btn-warning\">\r\n              <i className=\"fa fa-wrench\"></i>\r\n            </button>\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger  display-block-class\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              product.categoryIdentifier,\r\n              product.categorySequence\r\n            )}\r\n          >\r\n            <i className=\"fa fa-trash\"></i>\r\n          </button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n    let adminButtons;\r\n    if (user.admin) {\r\n      adminButtons = userIsAdmin;\r\n    }\r\n    return (\r\n      <div className=\"clearfix float-left product-list-container\">\r\n        <div className=\"add-box-shadow clearfix px-2 my-1 add-border-radius\">\r\n          <div className=\" photo-container float-left\">\r\n            <Link\r\n              to={`/moreInfo/${product.categoryIdentifier}/${product.categorySequence}`}\r\n            >\r\n              <img src={`/images/${product.productPhoto}`} alt=\"\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"float-left\">\r\n            <p className=\"product-name\">{product.productName}</p>\r\n            <p className=\"product-price\">{product.productPrice} Euro</p>\r\n            <p className=\"more-info\">\r\n              <Popup\r\n                content=\"Click to get more info about this product\"\r\n                className=\"cart-popup\"\r\n                position=\"right center\"\r\n                trigger={\r\n                  <Link\r\n                    className=\" btn btn-warning\"\r\n                    to={`/moreInfo/${product.categoryIdentifier}/${product.categorySequence}`}\r\n                  >\r\n                    <i className=\"fa fa-info-circle\"></i>more Info\r\n                  </Link>\r\n                }\r\n              />\r\n            </p>\r\n            <div className=\"add-to-cart\">\r\n              <Popup\r\n                content=\"Add product to your cart and continue shopping!\"\r\n                className=\"cart-popup\"\r\n                position=\"right center\"\r\n                trigger={\r\n                  <p\r\n                    className=\" btn btn-danger \"\r\n                    onClick={this.onAddToCartClick.bind(\r\n                      this,\r\n                      product.categorySequence\r\n                    )}\r\n                  >\r\n                    <i className=\"fa fa-cart-plus \"></i>add to cart\r\n                  </p>\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <p className=\"product-short-description\">\r\n              {product.productShortDescription}\r\n            </p>\r\n          </div>\r\n          {adminButtons}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProduct.propTypes = {\r\n  deleteProduct: PropTypes.func.isRequired,\r\n  addToShoppingCart: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteProduct, addToShoppingCart })(\r\n  Product\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Product from \"./Products/Product\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getProductList } from \"../../actions/productlistActions\";\r\nimport { Link } from \"react-router-dom\";\r\nclass ProductsBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProductList(id);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    //REMEMEBR name in brackets has to be the same as the name in props\r\n    const { products } = this.props.productList;\r\n    const { errors } = this.props;\r\n    let BoardContent;\r\n    const productItem = products.map(product => (\r\n      <Product key={product.id} product={product} id={id} />\r\n    ));\r\n    const boardAlgorithm = (errors, productItem) => {\r\n      if (productItem < 1) {\r\n        if (errors.categoryNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.categoryNotFound}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              <p>No Products on this board</p>\r\n              <Link className=\"btn btn-success\" to={`/addProduct/${id}`}>\r\n                Add new product\r\n              </Link>\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <div>{productItem}</div>;\r\n      }\r\n    };\r\n    BoardContent = boardAlgorithm(errors, productItem);\r\n    return (\r\n      <div className=\"col-md-9 register float-left d-inline-block margin-bottom\">\r\n        <div>{BoardContent}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProductsBoard.propTypes = {\r\n  productList: PropTypes.object.isRequired,\r\n  getProductList: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  productList: state.productlist,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProductList }\r\n)(ProductsBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProduct } from \"../../../actions/productlistActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n    this.state = {\r\n      productName: \"\",\r\n      productPhoto: \"\",\r\n      productPrice: \"\",\r\n      productShortDescription: \"\",\r\n      productDescription: \"\",\r\n      categoryIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProduct = {\r\n      //dont need to pass category id because its passed from url\r\n      productName: this.state.productName,\r\n      productPhoto: this.state.productPhoto,\r\n      productPrice: this.state.productPrice,\r\n      productShortDescription: this.state.productShortDescription,\r\n      productDescription: this.state.productDescription\r\n    };\r\n    this.props.addProduct(\r\n      this.state.categoryIdentifier,\r\n      newProduct,\r\n      this.props.history\r\n    );\r\n  }\r\n  //if component receive props\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h4 className=\"display-4 text-center\">Add New Product</h4>\r\n              <br></br>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productName\r\n                    })}\r\n                    placeholder=\"Product Name\"\r\n                    name=\"productName\"\r\n                    value={this.state.productName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.productName && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productPhoto\r\n                    })}\r\n                    placeholder=\"Name of the image with its extension f.e jpg, png. Size 200x200px\"\r\n                    name=\"productPhoto\"\r\n                    value={this.state.productPhoto}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.productPhoto && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productPhoto}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productPrice\r\n                    })}\r\n                    placeholder=\"Price of the product\"\r\n                    name=\"productPrice\"\r\n                    value={this.state.productPrice}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.productPrice && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productPrice}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productShortDescription\r\n                    })}\r\n                    placeholder=\"Short description of the product\"\r\n                    name=\"productShortDescription\"\r\n                    value={this.state.productShortDescription}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.productShortDescription && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productShortDescription}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productDescription\r\n                    })}\r\n                    placeholder=\"Description of the product\"\r\n                    name=\"productDescription\"\r\n                    value={this.state.productDescription}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.productDescription && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productDescription}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n                <br></br>\r\n                <Link\r\n                  to={`/productsBoard/${id}`}\r\n                  className=\"btn btn-primary float-left\"\r\n                >\r\n                  Return to the list of products\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProduct.propTypes = {\r\n  addProduct: PropTypes.func.isRequired,\r\n  //to have acces to the errors\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProduct }\r\n)(AddProduct);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { getProduct, updateProduct } from \"../../../actions/productlistActions\";\r\nimport PropTypes from \"prop-types\";\r\nclass UpdateProduct extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      categorySequence: \"\",\r\n      productName: \"\",\r\n      productPhoto: \"\",\r\n      productPrice: \"\",\r\n      productDescription: \"\",\r\n      productShortDescription: \"\",\r\n      categoryIdentifier: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const { productlist_id, pl_id } = this.props.match.params;\r\n    this.props.getProduct(productlist_id, pl_id, this.props.history);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      categorySequence,\r\n      productName,\r\n      productPhoto,\r\n      productPrice,\r\n      productShortDescription,\r\n      productDescription,\r\n      categoryIdentifier\r\n    } = nextProps.product;\r\n    this.setState({\r\n      id,\r\n      categorySequence,\r\n      productName,\r\n      productPhoto,\r\n      productPrice,\r\n      productShortDescription,\r\n      productDescription,\r\n      categoryIdentifier\r\n    });\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedProduct = {\r\n      id: this.state.id,\r\n      categorySequence: this.state.categorySequence,\r\n      productName: this.state.productName,\r\n      productPhoto: this.state.productPhoto,\r\n      productPrice: this.state.productPrice,\r\n      productShortDescription: this.state.productShortDescription,\r\n      productDescription: this.state.productDescription,\r\n      categoryIdentifier: this.state.categoryIdentifier\r\n    };\r\n\r\n    this.props.updateProduct(\r\n      this.state.categoryIdentifier,\r\n      this.state.categorySequence,\r\n      updatedProduct,\r\n      this.props.history\r\n    );\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h4 className=\"display-4 text-center\">Edit Product</h4>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productName\r\n                    })}\r\n                    placeholder=\"Product Name\"\r\n                    name=\"productName\"\r\n                    value={this.state.productName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.productName && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productPhoto\r\n                    })}\r\n                    placeholder=\"Put here name of the image with proper extension f.e jpg, png\"\r\n                    name=\"productPhoto\"\r\n                    value={this.state.productPhoto}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.productPhoto && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productPhoto}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productPrice\r\n                    })}\r\n                    placeholder=\"Price of the product\"\r\n                    name=\"productPrice\"\r\n                    value={this.state.productPrice}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.productPrice && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productPrice}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productShortDescription\r\n                    })}\r\n                    placeholder=\"Short description of the product\"\r\n                    name=\"productShortDescription\"\r\n                    value={this.state.productShortDescription}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.productShortDescription && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productShortDescription}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.productDescription\r\n                    })}\r\n                    placeholder=\"Description of the product\"\r\n                    name=\"productDescription\"\r\n                    value={this.state.productDescription}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.productDescription && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.productDescription}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n                <br></br>\r\n                <Link\r\n                  to={`/productsBoard/${id}`}\r\n                  className=\"btn btn-primary float-left\"\r\n                >\r\n                  Return to the list of products\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProduct.propTypes = {\r\n  getProduct: PropTypes.func.isRequired,\r\n  updateProduct: PropTypes.func.isRequired,\r\n  product: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  product: state.productlist.product,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProduct, updateProduct }\r\n)(UpdateProduct);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getProduct } from \"../../../actions/productlistActions\";\r\nimport { addToShoppingCart } from \"../../../actions/shoppingCartActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nclass MoreInfoProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      categorySequence: \"\",\r\n      productName: \"\",\r\n      productPhoto: \"\",\r\n      productPrice: \"\",\r\n      productDescription: \"\",\r\n      productShortDescription: \"\",\r\n      categoryIdentifier: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  onAddToCartClick(id) {\r\n    this.props.addToShoppingCart(id);\r\n  }\r\n  componentDidMount() {\r\n    const { productlist_id, pl_id } = this.props.match.params;\r\n    this.props.getProduct(productlist_id, pl_id, this.props.history);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      id,\r\n      categorySequence,\r\n      productName,\r\n      productPhoto,\r\n      productPrice,\r\n      productShortDescription,\r\n      productDescription,\r\n      categoryIdentifier\r\n    } = nextProps.product;\r\n    this.setState({\r\n      id,\r\n      categorySequence,\r\n      productName,\r\n      productPhoto,\r\n      productPrice,\r\n      productShortDescription,\r\n      productDescription,\r\n      categoryIdentifier\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { product } = this.props;\r\n    return (\r\n      <div className=\"register float-left col-md-9 d-inline-block add-box-shadow \">\r\n        <img\r\n          className=\"d-block float-left more-info-image\"\r\n          src={`/images/${this.state.productPhoto}`}\r\n          alt=\"\"\r\n        ></img>\r\n        <div className=\"float-left d-block \">\r\n          <p className=\"more-info-product-name\">{this.state.productName}</p>\r\n\r\n          <p className=\"more-info-product-price \">\r\n            {this.state.productPrice} Euro\r\n          </p>\r\n          <div className=\"text-left \">\r\n            <Popup\r\n              content=\"Add product to your cart and continue shopping!\"\r\n              className=\"cart-popup\"\r\n              position=\"right center\"\r\n              trigger={\r\n                <p\r\n                  className=\" btn btn-danger \"\r\n                  onClick={this.onAddToCartClick.bind(\r\n                    this,\r\n                    product.categorySequence\r\n                  )}\r\n                >\r\n                  add to cart\r\n                </p>\r\n              }\r\n            />\r\n          </div>\r\n          <p className=\"text-left float-left more-info-back-to-products-btn \">\r\n            <Link\r\n              className=\" btn btn-primary  \"\r\n              to={`/productsBoard/${product.categoryIdentifier}`}\r\n            >\r\n              back to products\r\n            </Link>\r\n          </p>\r\n        </div>\r\n        <br></br>\r\n        <br></br>\r\n        <p className=\"more-info-product-description d-inline-block\">\r\n          {this.state.productDescription}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMoreInfoProduct.propTypes = {\r\n  getProduct: PropTypes.func.isRequired,\r\n  product: PropTypes.object.isRequired,\r\n  addToShoppingCart: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  product: state.productlist.product\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProduct, addToShoppingCart }\r\n)(MoreInfoProduct);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteProductFromCart } from \"../../actions/shoppingCartActions\";\r\nclass CartProduct extends Component {\r\n  onDeleteIconClick(id) {\r\n    this.props.deleteProductFromCart(id);\r\n  }\r\n  render() {\r\n    const { item } = this.props;\r\n    return (\r\n      <div className=\" float-left cart-product-container add-box-shadow\">\r\n        <img\r\n          className=\"float-left cart-product-photo\"\r\n          src={`/images/${item.productPhotoInCart}`}\r\n          alt=\"\"\r\n        ></img>\r\n        <div className=\"cart-product-credentials-container float-left\">\r\n          <p className=\"cart-product-name\">{item.productNameInCart}</p>\r\n          <p className=\"cart-product-price\">{item.productPriceInCart} Euro</p>\r\n        </div>\r\n        <p\r\n          className=\"icon-trash cart-icon-trash text-right\"\r\n          onClick={this.onDeleteIconClick.bind(this, item.id)}\r\n        ></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nCartProduct.propTypes = {\r\n  deleteProductFromCart: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProductFromCart }\r\n)(CartProduct);\r\n","import React, { Component } from \"react\";\r\nimport CartProduct from \"./CartProduct\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getShoppingCart } from \"../../actions/shoppingCartActions\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nclass CartProductList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shipping: 0\r\n    };\r\n  }\r\n  onShippingButtonClick(value) {\r\n    this.setState({\r\n      shipping: value\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.getShoppingCart();\r\n  }\r\n\r\n  render() {\r\n    var costOfProducts = 0;\r\n    const { shoppingCart } = this.props.shoppingCart;\r\n    const shoppingCartItem = shoppingCart.map(item => (\r\n      <CartProduct key={item.id} item={item} />\r\n    ));\r\n    function handleToken(token, addresses) {\r\n      console.log({ token, addresses });\r\n    }\r\n    shoppingCart.map(item => (costOfProducts += item.productPriceInCart));\r\n    const renderProducts = () => {\r\n      if (shoppingCartItem < 1) {\r\n        return (\r\n          <div className=\"alert alert-info text-center\" role=\"alert\">\r\n            <p>Your cart is empty. Let's shopping</p>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div>\r\n            {shoppingCartItem}\r\n            <div className=\"cart-right-container\">\r\n              <div className=\" add-box-shadow cart-price-checkout-container\">\r\n                <div className=\"\">\r\n                  <label className=\"cart-label-price\">Cost:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">{costOfProducts} Euro</label>\r\n                </div>\r\n                <div className=\"clear-both \"></div>\r\n                <div>\r\n                  <label className=\"cart-label-price\">Ship:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">\r\n                    {this.state.shipping} Euro\r\n                  </label>\r\n                </div>\r\n                <div className=\"clear-both \"></div>\r\n                <div>\r\n                  <label className=\"cart-label-price \">Total Cost:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">\r\n                    {costOfProducts + this.state.shipping} Euro\r\n                  </label>\r\n                </div>\r\n\r\n                <hr></hr>\r\n\r\n                <StripeCheckout\r\n                  currency=\"EUR\"\r\n                  stripeKey=\"pk_test_L62B8bk6mZ53yvnBXxzvCZ6i00rZlLuij6\"\r\n                  token={handleToken}\r\n                  billingAddress\r\n                  shippingAddress\r\n                  amount={(costOfProducts + this.state.shipping) * 100}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"btn-group-vertical btn-group-toggle cart-shipping-options\">\r\n                <label className=\"btn btn-secondary active text-left\">\r\n                  Choose shipping option\r\n                </label>\r\n                <label className=\"btn btn-secondary text-left\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"options\"\r\n                    id=\"option1\"\r\n                    onClick={() => this.onShippingButtonClick(5)}\r\n                  />\r\n                  <label className=\"cart-label-price\">DPD:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">5 Euro</label>\r\n                </label>\r\n                <label className=\"btn btn-secondary text-left\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"options\"\r\n                    id=\"option2\"\r\n                    onClick={() => this.onShippingButtonClick(6)}\r\n                  />\r\n                  <label className=\"cart-label-price\">DHL:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">6 Euro</label>\r\n                </label>\r\n                <label className=\"btn btn-secondary text-left\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"options\"\r\n                    id=\"option3\"\r\n                    onClick={() => this.onShippingButtonClick(7)}\r\n                  />\r\n                  <label className=\"cart-label-price\">Fedex:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">7 Euro</label>\r\n                </label>\r\n                <label className=\"btn btn-secondary text-left\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"options\"\r\n                    id=\"option4\"\r\n                    onClick={() => this.onShippingButtonClick(8)}\r\n                  />\r\n                  <label className=\"cart-label-price\">Amazon:</label>\r\n                  <div className=\"in-one-line-on-endings\"></div>\r\n                  <label className=\"someclass\">8 Euro</label>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n    let CartItems = renderProducts();\r\n    return <div className=\"margin-bottom\">{CartItems}</div>;\r\n  }\r\n}\r\n\r\nCartProductList.propTypes = {\r\n  getShoppingCart: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  shoppingCart: state.shoppingCart\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getShoppingCart }\r\n)(CartProductList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass InfoImage extends Component {\r\n  render() {\r\n    const { shopMainData } = this.props.shopMainData;\r\n    return (\r\n      <div>\r\n        <img src={`/images/${shopMainData.pictureOnTheDashboard}`} alt=\"\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  shopMainData: state.shopMainData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(InfoImage);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    const { shopMainData } = this.props.shopMainData;\r\n    return (\r\n      <footer className=\"page-footer font-small footer\">\r\n        <div className=\" copyright footer-copyright py-3 float-left  \">\r\n          © 2019 Copyright: Kamil Kamyszek\r\n        </div>\r\n        <div className=\"contact py-3 text-right  \">\r\n          Contact: {shopMainData.contactEmail}\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  shopMainData: state.shopMainData\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Footer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { updateShopMainData } from \"../../actions/shopMainDataActions\";\r\nclass ChangeMainData extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      shopName: \"\",\r\n      pictureOnTheDashboard: \"\",\r\n      contactEmail: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      id,\r\n      shopName,\r\n      pictureOnTheDashboard,\r\n      contactEmail\r\n    } = this.props.shopMainData;\r\n    this.setState({\r\n      id,\r\n      shopName,\r\n      pictureOnTheDashboard,\r\n      contactEmail\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      shopName,\r\n      pictureOnTheDashboard,\r\n      contactEmail\r\n    } = nextProps.shopMainData;\r\n    this.setState({\r\n      id,\r\n      shopName,\r\n      pictureOnTheDashboard,\r\n      contactEmail\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateShopMainData = {\r\n      id: 1,\r\n      shopName: this.state.shopName,\r\n      pictureOnTheDashboard: this.state.pictureOnTheDashboard,\r\n      contactEmail: this.state.contactEmail\r\n    };\r\n    this.props.updateShopMainData(updateShopMainData, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h4 className=\"display-4 text-center\">Change Main Data</h4>\r\n              <br></br>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.shopName\r\n                    })}\r\n                    name=\"shopName\"\r\n                    placeholder=\"Name of the shop\"\r\n                    value={this.state.shopName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.shopName && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.shopName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.pictureOnTheDashboard\r\n                    })}\r\n                    name=\"pictureOnTheDashboard\"\r\n                    placeholder=\"Name of the main page image with its extension f.e jpg, png. Size 1200x550px\"\r\n                    value={this.state.pictureOnTheDashboard}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.pictureOnTheDashboard && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.pictureOnTheDashboard}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.contactEmail\r\n                    })}\r\n                    name=\"contactEmail\"\r\n                    placeholder=\"Contact email on the footer\"\r\n                    value={this.state.contactEmail}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.contactEmail && (\r\n                    <div className=\"invalid-feedback text-right\">\r\n                      {errors.contactEmail}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nChangeMainData.propTypes = {\r\n  updateShopMainData: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  shopMainData: state.shopMainData.shopMainData,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateShopMainData }\r\n)(ChangeMainData);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class EnterPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p className=\"enter-page-header-text\">Welcome to my store!</p>\r\n        <p className=\"enter-page-login-register-message\">\r\n          Before you start shopping, let's log in or create new account\r\n        </p>\r\n        <Link className=\"btn btn-primary enter-page-buttons\" to=\"/login\">\r\n          Log in\r\n        </Link>\r\n        <Link className=\"btn btn-primary enter-page-buttons\" to=\"/register\">\r\n          Sign Up\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { login } from \"../../actions/securityAcions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(loginRequest);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <p className=\"login-register-header\">Log in and do the shopping!</p>\r\n          <hr></hr>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.username\r\n              })}\r\n              placeholder=\"Username\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.onChange}\r\n            />\r\n            {errors.username && (\r\n              <div className=\"invalid-feedback text-right\">\r\n                {errors.username}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.password\r\n              })}\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.onChange}\r\n            />\r\n            {errors.password && (\r\n              <div className=\"invalid-feedback text-right\">\r\n                {errors.password}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <br></br>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary button-width scale-button\"\r\n          >\r\n            Log in\r\n          </button>\r\n        </form>\r\n        <hr></hr>\r\n        <Link to=\"/register\">\r\n          <button className=\" btn btn-primary button-width scale-button\">\r\n            Don't have an account? Sign up!\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createNewUser } from \"../../actions/securityAcions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <p className=\"login-register-header\">Set up new account</p>\r\n          <hr></hr>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.username\r\n              })}\r\n              placeholder=\"Username\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.onChange}\r\n            />\r\n            {errors.username && (\r\n              <div className=\"invalid-feedback text-right\">\r\n                {errors.username}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.fullName\r\n              })}\r\n              placeholder=\"Full name\"\r\n              name=\"fullName\"\r\n              value={this.state.fullName}\r\n              onChange={this.onChange}\r\n            />\r\n            {errors.fullName && (\r\n              <div className=\"invalid-feedback text-right\">\r\n                {errors.fullName}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.password\r\n              })}\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.onChange}\r\n            />\r\n            {errors.password && (\r\n              <div className=\"invalid-feedback text-right\">\r\n                {errors.password}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className={classnames(\"form-control form-control-lg\", {\r\n                \"is-invalid\": errors.confirmPassword\r\n              })}\r\n              placeholder=\"Confirm password\"\r\n              name=\"confirmPassword\"\r\n              value={this.state.confirmPassword}\r\n              onChange={this.onChange}\r\n            />\r\n            {errors.confirmPassword && (\r\n              <div className=\"invalid-feedback text-right\">\r\n                {errors.confirmPassword}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <br></br>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary button-width scale-button\"\r\n          >\r\n            Sign up\r\n          </button>\r\n        </form>\r\n        <hr></hr>\r\n        <Link to=\"/login\">\r\n          <button className=\" btn btn-primary button-width   scale-button\">\r\n            Already have an account? Log in!\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./fontello/css/fontello.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport AddCategory from \"./components/Category/AddCategory\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateCategory from \"./components/Category/UpdateCategory\";\nimport ProductsBoard from \"./components/ProductsBoard/ProductsBoard\";\nimport AddProduct from \"./components/ProductsBoard/Products/AddProduct\";\nimport UpdateProduct from \"./components/ProductsBoard/Products/UpdateProduct\";\nimport MoreInfoProduct from \"./components/ProductsBoard/Products/MoreInfoProduct\";\nimport CartProductList from \"./components/ShoppingCart/CartProductList\";\nimport InfoImage from \"./components/InfoImage\";\nimport Footer from \"./components/Layout/Footer\";\nimport ChangeMainData from \"./components/ChangeMainData/ChangeMainData\";\nimport EnterPage from \"./components/Layout/EnterPage\";\nimport Login from \"./components/User/Login\";\nimport Register from \"./components/User/Register\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityAcions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\n//tokent is being kept in local storage\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\n//url with parameters needs to be separated routed if we want many url to one component\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/\" component={EnterPage} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n\n          <SecuredRoute\n            exact\n            path=\"/updateCategory/:id\"\n            component={Dashboard}\n          />\n          <SecuredRoute exact path=\"/productsBoard/:id\" component={Dashboard} />\n          <SecuredRoute exact path=\"/addProduct/:id\" component={Dashboard} />\n          <SecuredRoute\n            exact\n            path=\"/updateProduct/:productlist_id/:pl_id\"\n            component={Dashboard}\n          />\n          <SecuredRoute\n            exact\n            path=\"/moreInfo/:productlist_id/:pl_id\"\n            component={Dashboard}\n          />\n          <SecuredRoute exact path=\"/addCategory\" component={Dashboard} />\n          <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n          <SecuredRoute exact path=\"/dashboard\" component={InfoImage} />\n          <SecuredRoute exact path=\"/addCategory\" component={AddCategory} />\n          <SecuredRoute\n            exact\n            path=\"/shoppingCart\"\n            component={CartProductList}\n          />\n          <SecuredRoute\n            exact\n            path=\"/updateCategory/:id\"\n            component={UpdateCategory}\n          />\n          <SecuredRoute\n            exact\n            path=\"/productsBoard/:id\"\n            component={ProductsBoard}\n          />\n          <SecuredRoute exact path=\"/addProduct/:id\" component={AddProduct} />\n          <SecuredRoute\n            exact\n            path=\"/changeMainData\"\n            component={ChangeMainData}\n          />\n          <SecuredRoute\n            exact\n            path=\"/moreInfo/:productlist_id/:pl_id\"\n            component={MoreInfoProduct}\n          />\n          <SecuredRoute\n            exact\n            path=\"/updateProduct/:productlist_id/:pl_id\"\n            component={UpdateProduct}\n          />\n\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}